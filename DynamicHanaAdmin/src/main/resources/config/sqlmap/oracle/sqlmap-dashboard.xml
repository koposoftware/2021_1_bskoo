<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dashboard.DashboardDAO">
	<resultMap type="dashboardVO" id="dashboardMap">
		<result column="compare_value" property="compareValue" />
		<result column="history_date" property="historyDate" />
		<result column="sub_total" property="subTotal" />
		<result column="sub_total_double" property="subTotalDouble" />
		<result column="cluster_no" property="clusterNo" />
		<result column="cluster_name" property="clusterName" />
		<result column="card_name" property="cardName" />
		<result column="this_month" property="thisMonth" />
		<result column="last_month" property="lastMonth" />

	</resultMap>

	<select id="selectTotalMember" resultType="dashboardVO"
		resultMap="dashboardMap">
		SELECT CNT, COMPARE_VALUE,
		ROUND((COMPARE_VALUE/CNT),4)*100
		AS RATIO FROM (
		SELECT COUNT(*) AS CNT FROM T_MEMBER),(
		SELECT COUNT(*)
		AS COMPARE_VALUE FROM T_MEMBER WHERE ENROLL_DATE BETWEEN
		TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1)+1)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD')
		AND TO_CHAR(TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE, -1)))+1,'YYYY-MM-DD'))

	</select>

	<select id="selectTotalTransaction" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
		SELECT CNT, COMPARE_VALUE,
    CASE WHEN CNT>=COMPARE_VALUE THEN ROUND((CNT-COMPARE_VALUE)/COMPARE_VALUE *100,2)
    WHEN  CNT<COMPARE_VALUE THEN ROUND((COMPARE_VALUE-CNT)/COMPARE_VALUE *100,2) END AS RATIO FROM (
SELECT COUNT(*) AS CNT FROM TRANSACTION_HISTORY WHERE HISTORY_DATE BETWEEN TO_CHAR(TRUNC(SYSDATE)) AND TO_CHAR(TRUNC(SYSDATE+1))),(
SELECT COUNT(*) AS COMPARE_VALUE FROM TRANSACTION_HISTORY WHERE HISTORY_DATE BETWEEN TO_CHAR(TRUNC(SYSDATE-1)) AND TO_CHAR(TRUNC(SYSDATE)))
		]]>


	</select>

	<select id="selectTotalAmount" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
		SELECT CNT, COMPARE_VALUE,
    CASE WHEN CNT>=COMPARE_VALUE THEN ROUND((CNT-COMPARE_VALUE)/COMPARE_VALUE *100,2)
    WHEN  CNT<COMPARE_VALUE THEN ROUND((COMPARE_VALUE-CNT)/COMPARE_VALUE *100,2) END AS RATIO FROM (
SELECT SUM(AMOUNT) AS CNT FROM TRANSACTION_HISTORY WHERE HISTORY_DATE BETWEEN TO_CHAR(TRUNC(SYSDATE)) AND TO_CHAR(TRUNC(SYSDATE+1))),(
SELECT SUM(AMOUNT) AS COMPARE_VALUE FROM TRANSACTION_HISTORY WHERE HISTORY_DATE BETWEEN TO_CHAR(TRUNC(SYSDATE-1)) AND TO_CHAR(TRUNC(SYSDATE)))
		]]>


	</select>



	<select id="selectWeelkyConsumption" resultType="list"
		resultMap="dashboardMap">

		SELECT HISTORY_DATE, SUM(AMOUNT) AS SUB_TOTAL FROM
		(SELECT
		TO_CHAR(TRUNC(HISTORY_DATE), 'MM-DD(DY)') AS HISTORY_DATE , AMOUNT
		FROM TRANSACTION_HISTORY WHERE HISTORY_DATE BETWEEN SYSDATE-7 AND
		SYSDATE) GROUP BY HISTORY_DATE ORDER BY HISTORY_DATE


	</select>

	<select id="selectMonthlyConsumption" resultType="list"
		resultMap="dashboardMap">
		<![CDATA[
		SELECT HISTORY_DATE, ROUND(SUM(AMOUNT),2) AS SUB_TOTAL_DOUBLE FROM(
SELECT TO_CHAR(TRUNC(HISTORY_DATE), 'MM')||'월' AS HISTORY_DATE, AMOUNT/10000000 AS AMOUNT  FROM TRANSACTION_HISTORY WHERE HISTORY_DATE >= TO_CHAR(ADD_MONTHS(SYSDATE, -5), 'YYYYMM') || '01'
AND HISTORY_DATE <= TO_CHAR(LAST_DAY(SYSDATE), 'YYYYMMDD')) GROUP BY HISTORY_DATE ORDER BY HISTORY_DATE
		]]>


	</select>

	<select id="selectMemberCluster" resultType="list"
		resultMap="dashboardMap">
		SELECT CLUSTER_NO, CLUSTER_NAME, CNT, CATEGORY,
		ROUND((CNT*100/SUM(CNT) OVER()),2) AS RATIO FROM(
		SELECT CLUSTER_NO,
		(CLUSTER_NO||'번 군집') AS
		CLUSTER_NAME, CNT,
		NVL(CATEGORY,'일반 고객군') AS
		CATEGORY FROM(
		SELECT T1.CLUSTER_NO, T1.CNT,
		T2.CATEGORY FROM(
		SELECT
		CLUSTER_NO, COUNT(MEMBER_NO) AS CNT FROM
		PCA_MEMBER WHERE
		PCA_DATE=(SELECT TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM')
		FROM DUAL) GROUP
		BY
		CLUSTER_NO ORDER BY CLUSTER_NO) T1,
		(SELECT DISTINCT
		CLUSTER_NO,
		LISTAGG(CATEGORY, ', ') WITHIN GROUP(ORDER BY
		CLUSTER_NO)
		OVER(PARTITION BY CLUSTER_NO) AS CATEGORY FROM
		PCA_COMPONENT WHERE
		PCA_DATE=TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1)+1)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD')
		ORDER BY CLUSTER_NO) T2
		WHERE T1.CLUSTER_NO =
		T2.CLUSTER_NO(+) ORDER BY
		CLUSTER_NO)) WHERE CLUSTER_NO>0 ORDER BY
		CLUSTER_NAME


	</select>

	<select id="selectTotalCluster" resultType="dashboardVO"
		resultMap="dashboardMap">
		SELECT CNT, COMPARE_VALUE FROM(
		SELECT MAX(CLUSTER_NO) AS
		COMPARE_VALUE FROM PCA_COMPONENT WHERE PCA_DATE =
		(TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-2)+1)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD'))),
		(SELECT MAX(CLUSTER_NO) AS CNT FROM PCA_COMPONENT WHERE PCA_DATE
		=TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-1)+1)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD'))


	</select>
	<select id="selectTopTenCard" resultType="list"
		resultMap="dashboardMap">
		<![CDATA[
SELECT CARD_NAME, CNT, LAST_MONTH, THIS_MONTH, CASE WHEN LAST_MONTH>=THIS_MONTH THEN ROUND((LAST_MONTH-THIS_MONTH)*100/DECODE(LAST_MONTH,0,1,LAST_MONTH),2) WHEN LAST_MONTH<THIS_MONTH THEN ROUND((THIS_MONTH-LAST_MONTH)*100/DECODE(LAST_MONTH,0,1,LAST_MONTH),2)  END AS RATIO
FROM(
SELECT CARD_NAME, SUM(CNT) AS CNT, NVL(SUM(LAST_MONTH),0) AS LAST_MONTH, NVL(SUM(THIS_MONTH),0) AS THIS_MONTH FROM(
SELECT CARD_NAME, CNT, 
CASE WHEN
    ENROLL_CARD_DATE BETWEEN TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM') AND LAST_DAY(ADD_MONTHS(SYSDATE,-1)) THEN 1
    ELSE 0
    END AS LAST_MONTH,
  CASE WHEN
    ENROLL_CARD_DATE BETWEEN TRUNC(ADD_MONTHS(SYSDATE,0), 'MM') AND LAST_DAY(ADD_MONTHS(SYSDATE,0)) THEN 1
    END AS THIS_MONTH  
    FROM(
SELECT C.CARD_NAME, 1 AS CNT, M.ENROLL_CARD_DATE FROM CARD C, MEMBER_CARD M WHERE C.CARD_CODE = M.CARD_CODE)) GROUP BY CARD_NAME ORDER BY CNT DESC) WHERE ROWNUM<=10
		]]>

	</select>

	<select id="selectConsumptionTimeSlot" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
SELECT MORNING, LUNCH, DINNER, NIGHT, (MORNING+LUNCH+DINNER+NIGHT) AS SUB_TOTAL FROM(
SELECT SUM(DECODE(HISTORY_DATE,'아침',1,0)) AS MORNING, SUM(DECODE(HISTORY_DATE,'점심',1,0)) AS LUNCH, SUM(DECODE(HISTORY_DATE,'저녁',1,0)) AS DINNER, SUM(DECODE(HISTORY_DATE,'야간',1,0)) AS NIGHT FROM(
SELECT CASE
WHEN HISTORY_TIME<'06:00' THEN '야간'
WHEN HISTORY_TIME<'12:00' THEN '아침'
WHEN HISTORY_TIME<'17:00' THEN '점심'
WHEN HISTORY_TIME<'21:00' THEN '저녁'
WHEN HISTORY_TIME<'24:00' THEN '야간'
END AS HISTORY_DATE
FROM TRANSACTION_HISTORY WHERE HISTORY_DATE BETWEEN TRUNC(ADD_MONTHS(SYSDATE,0), 'MM') AND LAST_DAY(ADD_MONTHS(SYSDATE,0))))
		]]>

	</select>




	<select id="selectClusterConsumption" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
SELECT CLUSTER_NO, DECODE(CLUSTER_NO, #{no}, CLUSTER_NO||'번 군집', '해당 군집 제외') AS CLUSTER_NAME, CATEGORY, ROUND(CASE WHEN CLUSTER_NO = 0 THEN SUB_TOTAL * 0.7 ELSE SUB_TOTAL END ,-2) AS SUB_TOTAL FROM(
SELECT CLUSTER_NO, CATEGORY, AVG(AMOUNT) AS SUB_TOTAL FROM (
SELECT DISTINCT H.HISTORY_NO, M.MEMBER_NO, H.HISTORY_DATE, H.CATEGORY, H.AMOUNT, DECODE(P.CLUSTER_NO,#{no},P.CLUSTER_NO,0) AS CLUSTER_NO FROM TRANSACTION_HISTORY H, MEMBER_CARD M, PCA_MEMBER P
WHERE M.MEMBER_NO = P.MEMBER_NO AND H.CARD_NO = M.CARD_NO
AND HISTORY_DATE BETWEEN TRUNC(ADD_MONTHS(SYSDATE,-1),'MM') AND TRUNC(ADD_MONTHS(SYSDATE,0), 'MM')-1 AND CATEGORY IN (SELECT CATEGORY FROM PCA_COMPONENT WHERE PCA_DATE = TRUNC(ADD_MONTHS(SYSDATE,-1), 'MM') AND CLUSTER_NO=#{no}))
GROUP BY CLUSTER_NO, CATEGORY) ORDER BY CLUSTER_NO
		]]>

	</select>

	<select id="selectAgeGroup" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
SELECT CLUSTER_NAME, COUNT(CLUSTER_NAME) AS SUB_TOTAL FROM
(SELECT CASE WHEN AGE<20 THEN '미성년자' WHEN AGE<30 THEN '20대' WHEN AGE<40 THEN '30대' WHEN AGE<50 THEN '40대' WHEN AGE<60 THEN '50대' WHEN AGE<70 THEN '60대' WHEN AGE>=70 THEN '70대 이상' END AS CLUSTER_NAME FROM T_MEMBER)
GROUP BY CLUSTER_NAME ORDER BY CLUSTER_NAME
		]]>

	</select>

	<select id="selectConsumptionCountDist" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
SELECT CLUSTER_NAME, CNT, ROUND((CNT*100/SUM(CNT) OVER()),2) AS RATIO FROM(
SELECT CLUSTER_NAME, COUNT(CLUSTER_NAME) AS CNT FROM(
SELECT MEMBER_NO, CASE WHEN COUNT(MEMBER_NO)<10 THEN '10건이하' WHEN COUNT(MEMBER_NO)<30 THEN '10건 ~ 30건'  WHEN COUNT(MEMBER_NO)<50 THEN '30건 ~ 50건' WHEN COUNT(MEMBER_NO)<100 THEN '50건 ~ 100건' WHEN COUNT(MEMBER_NO)<150 THEN '100건 ~ 150건' WHEN COUNT(MEMBER_NO)<200 THEN '150건 ~ 200건' WHEN COUNT(MEMBER_NO)>=200 THEN '200건 이상' END AS CLUSTER_NAME FROM(
SELECT T.MEMBER_NO, H.HISTORY_DATE, H.AMOUNT FROM TRANSACTION_HISTORY H, MEMBER_CARD M, T_MEMBER T WHERE H.CARD_NO = M.CARD_NO AND T.MEMBER_NO = M.MEMBER_NO
AND HISTORY_DATE BETWEEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-3)+1)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD') AND TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,0)+0)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD'))
GROUP BY MEMBER_NO ORDER BY CLUSTER_NAME DESC) GROUP BY CLUSTER_NAME ORDER BY (CASE WHEN CLUSTER_NAME ='10건이하' THEN 1 WHEN CLUSTER_NAME = '10건 ~ 30건' THEN 2 WHEN CLUSTER_NAME = '30건 ~ 50건' THEN 3 WHEN CLUSTER_NAME = '50건 ~ 100건' THEN 4 WHEN CLUSTER_NAME= '100건 ~ 150건' THEN 5 WHEN CLUSTER_NAME= '150건 ~ 200건' THEN 6 WHEN CLUSTER_NAME = '200건 이상' THEN 7 END))
		]]>

	</select>

	<select id="selectConsumptionSumDist" resultType="dashboardVO"
		resultMap="dashboardMap">
		<![CDATA[
SELECT CLUSTER_NAME, CNT, ROUND((CNT*100/SUM(CNT) OVER()),2) AS RATIO FROM(
SELECT SUB_TOTAL AS CLUSTER_NAME, COUNT(SUB_TOTAL) AS CNT FROM(
SELECT MEMBER_NO, CASE WHEN SUM(AMOUNT)<100000 THEN '10만원 이하' WHEN SUM(AMOUNT)<300000 THEN '10만원 ~ 30만원' WHEN SUM(AMOUNT)<500000 THEN '30만원 ~ 50만원' WHEN SUM(AMOUNT)<1000000 THEN '50만원 ~ 100만원' WHEN SUM(AMOUNT)<1500000 THEN '100만원 ~ 150만원' WHEN SUM(AMOUNT)<2000000 THEN '150만원 ~ 200만원' WHEN SUM(AMOUNT)>=2000000 THEN '200만원 이상' END AS SUB_TOTAL FROM(
SELECT T.MEMBER_NO, H.HISTORY_DATE, H.AMOUNT FROM TRANSACTION_HISTORY H, MEMBER_CARD M, T_MEMBER T WHERE H.CARD_NO = M.CARD_NO AND T.MEMBER_NO = M.MEMBER_NO
AND HISTORY_DATE BETWEEN TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,-3)+1)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD') AND TO_CHAR(TRUNC(ADD_MONTHS(SYSDATE,0)+0)-TO_CHAR(SYSDATE,'DD'),'YYYY-MM-DD')) GROUP BY MEMBER_NO) GROUP BY SUB_TOTAL
ORDER BY (CASE WHEN CLUSTER_NAME ='10만원 이하' THEN 1 WHEN CLUSTER_NAME = '10만원 ~ 30만원' THEN 2 WHEN CLUSTER_NAME = '30만원 ~ 50만원' THEN 3 WHEN CLUSTER_NAME = '50만원 ~ 100만원' THEN 4 WHEN CLUSTER_NAME= '100만원 ~ 150만원' THEN 5 WHEN CLUSTER_NAME= '150만원 ~ 200만원' THEN 6 WHEN CLUSTER_NAME = '200만원 이상' THEN 7 END))
		]]>

	</select>




</mapper>